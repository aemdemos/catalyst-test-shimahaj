# .github/workflows/draft-aemy-pr.yml
# AEMY processing readiness check - prevents merging during AEMY workflow execution
# Converts PR to draft when AEMY starts, acts as status check that fails while AEMY runs/fails
# Allows merge and marks PR ready when AEMY completes successfully with aemy-merge label

name: aemy-pr-readiness-check

on:
  pull_request:
    types: [labeled, unlabeled, opened, reopened, synchronize]

permissions:
  pull-requests: write
  contents: read

env:
  BLOCKING_LABELS: "aemy-running,aemy-failed"
  MERGE_LABEL: "aemy-merge"

jobs:
  manage-pr-state:
    name: Manage PR Draft State
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Debug - Show current labels
        run: |
          echo "üîç Current PR labels:"
          echo "${{ join(github.event.pull_request.labels.*.name, ', ') }}"
          echo "üîç Event type: ${{ github.event.action }}"

      - name: Convert PR to draft while AEMY is running
        if: contains(github.event.pull_request.labels.*.name, 'aemy-running')
        run: |
          gh pr ready --undo ${{ github.event.pull_request.number }} || exit 1
          echo "‚úÖ PR converted to draft"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prevent merge - PR not ready due to AEMY processing
        if: |
          contains(github.event.pull_request.labels.*.name, 'aemy-running') ||
          contains(github.event.pull_request.labels.*.name, 'aemy-failed')
        run: |
          echo "‚ùå Cannot merge: AEMY processing in progress or failed"
          exit 1

      - name: Mark PR ready for review after AEMY completion
        if: |
          contains(github.event.pull_request.labels.*.name, env.MERGE_LABEL) && 
          !contains(github.event.pull_request.labels.*.name, 'aemy-running') &&
          !contains(github.event.pull_request.labels.*.name, 'aemy-failed')
        run: |
          gh pr ready ${{ github.event.pull_request.number }} || exit 1
          echo "‚úÖ PR ready for review"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
